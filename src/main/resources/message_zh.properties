app-log-continue=输入“q”或“Q”退出，其他键查看其他Spark应用的日志：
app-index-select=请从上述列表中选择查看日志的Spark应用id或者编号并输入（输入q退出）：
app-not-found=未能找到name包含{0}的Spark应用
app-not-running=应用{0}已处于{1}状态，无法查看Executor日志
argument-compare-mapping=MySQL数据类型:Hive数据类型
argument-export=数据导出方式
argument-expression=变量=表达式
argument-parameter=变量=值
argument-script=脚本名称
closed=连接{0}已关闭，请手动重连
closing=关闭中 : {0} : {1}
column-address=地址
column-elapsed-time=运行时间
column-executor-address=执行器地址
column-finish-time=结束时间
column-launch-time=启动时间
column-is-active=是否活动
column-log-address=日志地址
column-memory=内存
column-name=名称
column-order-number=序号
column-status=状态
command-not-supported=不支持命令{0}
connecting=正在连接到{0} ...
description-alter=修改Hive Over HBase外部表，需要提供以下参数：{0}
description-alter-add={0}的子选项，向Hive Over HBase外部表增加字段。
description-alter-drop={0}的子选项，从Hive Over HBase外部表中删除字段。
description-compare=比较MySQL数据表和Hive数据表之间的表结构，子选项{0}和{1}未提供时需要以下参数：{2}。
description-compare-database={0}的子选项，表示从数据库中获取需比较表结构差异的表信息，需提供以下参数：{1}
description-compare-file={0}的二级选项，表示从文件中获取需比较表结构差异的表信息，需提供选项{1}或{2}。
description-compare-file-header={0}的子选项，表示从文件中获取需比较表结构差异的表信息时，文件有列标题，需提供以下参数：{1}。
description-compare-file-index={0}的子选项，从文件中获取需比较表结构差异的表信息时，文件无列标题，字段位置以索引表达，需提供以下：{1}。
description-compare-mapping={0}的子选项，忽略检查的类型映射，比如说MySQL为varchar，Hive为string的字段就无需检查。
description-expression=动态求值表达式并赋给一个变量
description-generator=HBase结构生成器，需要提供以下参数：{0}(以逗号分隔的HBase列)和hbase.column.$column(此配置值是以冒号分隔的列族名称、列名称、数据类型，例如data:name、data:age:int，其中$column是hbase.columns中以逗号分隔的小项)。
description-help=列出程序用法
description-log=交互式查看Spark应用的Driver日志或Executor日志，需提供以下参数：{0}
description-parameter=参数
description-query=交互式查询工具
description-script=解析和执行sql脚本文件，支持sql查询hbase
description-universal-email=通用子选项，发送邮件，需提供以下参数：{0}
description-universal-export=通用子选项，数据导出类型，可以是mysql、redis、ssv和none其中之一。对于mysql，需要提供以下参数：{0}；对于redis，需要提供以下参数：{1}；对于ssv，需要提供以下参数：{2}。
executor-index-select=请输入Executor序号和日志长度(默认为-4096)，输入q退出，输入s保存到文件，多个输入请以空格分隔：
executor-log-continue=输入“q”退出，其他键查看其他Executor日志：
executor-not-found=未能找到任何满足条件的Executor，输入Y或y一分钟后重试，输入其他字符退出：
executor-not-in-list=您输入的Execute序号不在列表中，
executor-or-driver-log-following=应用{0}的{1}日志如下：\n{2}
field-not-found-in-json=无法在下述的JSON中找到域“{0}”：\n{1}
continue-on-input=输入“q"退出，其他键继续查看：
help-alter=修改Hive Over HBase外部表的字段
help-close=关闭当前jdbc连接
help-closeAll=关闭所有jdbc连接
help-columns=列出指定表的所有列信息，相当于desc <table name>
help-compare=比较MySQL数据表和Hive数据表之间的表结构
help-connect=打开(建立)与指定jdbc url的连接
help-execute=解析和执行sql脚本文件，支持sql查询hbase
help-get=查看指定配置项的值
help-generate=生成表达HBase数据结构的json
help-go=切换到指定连接
help-help=获取使用帮助
help-history=获取历史输入
help-list=列出已打开的连接
help-log=查看Spark应用的Driver日志或Executor日志
help-null2Empty=是否将null值以空白字符串输出，相当于!set print.null2empty=true或!set print.null2empty true
help-outputFormat=设置查询结果的输出格式，相当于!set print.format=<format>或!set print.format <format>，format可取的值有：\n\
  csv：逗号分隔输出\n\
  default：带边框的二维表格输出\n\
  dsv：管道符|分隔输出\n\
  json：json格式输出，json样式由配置项print.json.pretty控制，false为压缩样式，true为格式化样式\n\
  tsv：制表符分隔输出\n\
  vertical：key value格式逐行输出\n\
  xml_attributes：xml结点属性格式输出\n\
  xml_elements：xml结点元素格式输出
help-quit=退出程序，若退出前有已打开的连接，会自动先关闭连接，然后退出
help-reconnect=重新连接当前因某种原因关闭的连接
help-register=解析HBase Catalog，注册为内存表
help-set=设置某个配置项的值，立即生效
help-showFunctions=列出当前连接的自带函数
help-syntax=用法: {0}
help-tables=列出当前连接的数据库中所有的表或匹配指定模式的表
invalid-connection=无效的连接: {0}
multiple-matches=歧义的命令: {0}
no-current-connection=当前无连接
no-method=未能在“{1}”中找到匹配“{0}”的方法
no-such-method=未能在“{1}”中找到方法“{0}”
parameter-format-limitation={0}必须是{1}，
parameter-value-limitation2=参数{0}只能是{1}或{2}
parameter-input=请输入参数{0}的值（按回车忽略）:
can-not-abort=操作无法中止，再次按下Ctrl+C退出程序
query-aborted=查询已中止
reconnecting=重新连接到{0} ...
row-selected=0#无返回数据|1#返回{0}行数据|1<返回{0}行数据
row-displayed=0#无数据可显示|1#已输出{0}行数据|1<已输出{0}行数据
row-effected={0}行受影响
time-elapsed=(用时{0}秒)
unknown-command=未知的命令: {0}
unknown-filter=未知的过滤器: {0}
unknown-format=未知的输出格式“{0}”, 可能是: {1}
usage-footer=注意：各一级选项同时出现时优先级排序是：
usage-header=功能：增加/删除Hive外部表字段，比较MySQL源表和Hive目标表结构差异，执行SQL脚本，生成HBase Catalog，交互式查询
#HBase filter usage and function
filter-ColumnCountGetFilter=用法：ColumnCountGetFilter(limit), 逐行返回前limit个列，新的一行列数小于limit时停止扫描
filter-ColumnPaginationFilter=用法：ColumnCountGetFilter(limit,offset), 逐行返回除前offset个列后的limit个列，新的一行列数小于limit+offset时停止扫描
filter-ColumnPrefixFilter=用法：ColumnPrefixFilter(prefix)，列前缀过滤
filter-ColumnRangeFilter=用法：ColumnRangeFilter(minColumn,minColumnInclusive,maxColumn,maxColumnInclusive)，列范围过滤
filter-DependentColumnFilter=用法：DependentColumnFilter(family,qualifier,dropDependentColumn,valueCompareOp,valueComparator)，以指定列数据对应的时间戳为条件对同列族的其他列进行过滤
filter-FamilyFilter=用法：FamilyFilter(familyCompareOp,familyComparator)，列族过滤
filter-FirstKeyOnlyFilter=用法：FirstKeyOnlyFilter()，只要第一列
filter-InclusiveStopFilter=用法：InclusiveStopFilter(stopRowKey)，扫描至指定RowKey则停止
filter-KeyOnlyFilter=用法：KeyOnlyFilter()，只返回列名
filter-MultipleColumnPrefixFilter=用法：MultipleColumnPrefixFilter(prefix...)，多列前缀过滤
filter-PageFilter=用法：PageFilter(pageSize)，分页过滤
filter-PrefixFilter=用法：PrefixFilter(prefix)，RowKey前缀过滤
filter-QualifierFilter=用法：QualifierFilter(qualifierCompareOp,qualifierComparator)，列族过滤
filter-RowFilter=用法：RowFilter(rowCompareOp,rowComparator)，RowKey过滤
filter-SingleColumnValueExcludeFilter=用法：SingleColumnValueExcludeFilter(family,qualifier,compareOp,value)，单列排除过滤
filter-SingleColumnValueFilter=用法：SingleColumnValueFilter(family,qualifier,compareOp,value)，单列包含过滤
filter-TimestampsFilter=用法：TimestampsFilter(timestamp...)，时间戳过滤
filter-ValueFilter=用法：ValueFilter(valueCompareOp,valueComparator)，值过滤
#HBase commands usage
usage-clone=用法：clone <快照> <表名>
usage-count=用法：count <表名>
usage-create=用法：create <表名> <列族1>[ 列族2][ 列族3]...
usage-create_namespace=用法：create <命名空间>
usage-delete=用法：delete <表名> <行键>[ <列族> <列名> [时间戳]]
usage-delete_snapshot=用法: delete_snapshot <快照>
usage-disable=用法：disable <表名>
usage-disable_and_drop=用法：disable_and_drop <表名>
usage-drop=用法：drop <表名>
usage-enable=用法：enable <表名>
usage-get=用法：get <表名> <行键>
usage-list=用法：list [正则表达式]
usage-list_filters=用法：list_filters
usage-list_namespace=用法：list_namespace
usage-list_namespace_tables=用法：list_namespace_tables <namespace> [正则表达式]
usage-list_snapshots=用法：list_snapshots [正则表达式]
usage-put=用法：put <表名> <行键> <列族> <列名> <列值>
usage-scan=用法：scan <表名> [LIMIT=>? FILTER=>? PAGE=> FILTER=>? ...]
usage-search=用法：search <table>
press-again=再次按下Ctrl-C以强制退出
usage-snapshot=用法：snapshot <表名> <快照>
#Hive/Common commands usage
usage-connect=用法：!connect <url> [username] [password] [driver]
usage-!get=用法：!get <key>
usage-go=用法：!go <connection index>
usage-set=用法：!set <key><=/ ><value>
usage-columns=用法：!columns <table name>
usage-alter=用法：!alter -A/-D[ -p key=value]
usage-log=用法：!log[ -p key=value]
usage-compare=用法：!compare -D/-F -H/-I [-M t1：t2][ -p key=value]
usage-execute=用法：!execute <-s script>[ -p key=value]
usage-register=用法：!register HBaseCatalog as temporary_table
on-start-invalid=默认于启动时创建的连接其url无效
description-engine=SQL执行引擎
force-exit=程序已强制退出